# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type Car {
    carType: CarType
    createdBy: String
    createdDate: Date
    displayName: String
    ecoRank: EcoRank
    garage: Garage
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: Date
    manufactureDate: Date
    manufacturer: String!
    maxPassengers: Int
    mileage: Float
    model: String
    photo: FileRef
    price: BigDecimal
    purchaseDate: Date
    regNumber: String
    technicalCertificate: TechnicalCertificate
    version: Int
    wheelOnRight: Boolean
}

type CarDto {
    garage: Garage
    id: UUID
    manufacturer: String
    model: String
    price: BigDecimal
}

type Customer {
    email: String
    id: UUID
    name: String
}

type FileRef {
    fileName: String
    parameters: Map_String_StringScalar
    path: String
    storageName: String
}

type Garage {
    address: String
    capacity: Int
    cars: [Car]
    currentCars: [Car]
    id: UUID
    name: String
    personnel: [User]
    vanEntry: Boolean
    workingHoursFrom: LocalTime
    workingHoursTo: LocalTime
}

type GrantedAuthority {
    authority: String
}

"Mutation root"
type Mutation {
    createProduct(manufacturer: String!, model: String, price: BigDecimal): Product
}

type Order {
    amount: BigDecimal
    customer: Customer
    date: LocalDateTime
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: Date
    lines: [OrderLine]
}

type OrderLine {
    id: UUID
    order: Order
    product: Product!
    quantity: Int
}

type Product {
    car: Car!
    id: UUID
    price: BigDecimal
    special: Boolean
}

"Query root"
type Query {
    cars: [CarDto]
    orders(order: String = "lastModifiedDate"): [Order]
    orders2: [scr_Order_1]
}

"Subscription root"
type Subscription {
    newCarAdded(manufacturer: String): Car
}

type TechnicalCertificate {
    car: Car
    certNumber: String
    id: UUID
}

type User {
    accountNonExpired: Boolean!
    accountNonLocked: Boolean!
    authorities: [GrantedAuthority]
    credentialsNonExpired: Boolean!
    displayName: String
    email: String
    enabled: Boolean
    firstName: String
    id: UUID
    lastName: String
    password: String
    phone: String
    username: String
    version: Int
}

type scr_Order_1 {
    id: UUID
}

enum CarType {
    HATCHBACK
    SEDAN
}

enum EcoRank {
    EURO1
    EURO2
    EURO3
}


"Built-in java.math.BigDecimal"
scalar BigDecimal

"Built-in scalar representing an instant in time"
scalar Date

"Built-in scalar representing a local date-time"
scalar LocalDateTime

"Built-in scalar representing a local time"
scalar LocalTime

"Built-in scalar for map-like structures"
scalar Map_String_StringScalar

"Use SPQR's SchemaPrinter to remove this from SDL"
scalar UNREPRESENTABLE

"UUID String"
scalar UUID